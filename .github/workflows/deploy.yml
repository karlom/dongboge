name: 部署到腾讯云服务器和CDN

on:
  push:
    branches: [main, master]
  workflow_dispatch: # 允许手动触发工作流

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 缓存依赖
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: 安装依赖
        run: |
          echo "安装项目依赖..."
          npm ci --prefer-offline --no-audit

      - name: 确保COS SDK依赖
        run: |
          chmod +x scripts/ensure-dependencies.cjs
          node scripts/ensure-dependencies.cjs

      - name: 缓存构建产物
        uses: actions/cache@v3
        with:
          path: |
            dist/
            .astro/
          key: ${{ runner.os }}-build-${{ hashFiles('src/**/*', 'astro.config.mjs') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: 设置脚本权限
        run: |
          chmod +x scripts/incremental-upload.cjs

      - name: 构建项目
        env:
          PUBLIC_CDN_URL: https://cdn.dongboge.cn
          SITE_URL: https://dongboge.cn
          PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
          PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
          NODE_ENV: production
        run: |
          echo "开始构建项目..."
          echo "使用的CDN URL: $PUBLIC_CDN_URL"
          echo "Supabase URL: ${PUBLIC_SUPABASE_URL:0:30}..."
          npm run build

      - name: 检查构建输出
        run: |
          echo "检查构建输出文件..."
          ls -la dist/
          echo "检查客户端文件..."
          ls -la dist/client/ || echo "没有client目录"
          echo "检查服务端文件..."
          ls -la dist/server/ || echo "没有server目录"
          echo "检查HTML文件..."
          find dist -name "*.html" | head -5 | xargs ls -la || echo "未找到HTML文件"

      - name: 增量上传静态资源到腾讯云COS
        timeout-minutes: 15
        run: |
          echo "增量上传静态资源到腾讯云COS..."
          # 设置环境变量
          export TENCENT_SECRET_ID=${{ secrets.TENCENT_SECRET_ID }}
          export TENCENT_SECRET_KEY=${{ secrets.TENCENT_SECRET_KEY }}
          export TENCENT_COS_BUCKET=${{ secrets.TENCENT_COS_BUCKET }}
          export TENCENT_COS_REGION=ap-guangzhou
          # 确保CDN_DOMAIN不包含协议前缀
          export CDN_DOMAIN=$(echo ${{ secrets.CDN_DOMAIN }} | sed 's|^https://||' | sed 's|^http://||')

          # 运行增量上传脚本
          node scripts/incremental-upload.cjs

      - name: 部署客户端文件到服务器
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete --exclude="fonts/" --exclude="images/"
          path: dist/client/
          remote_path: /var/www/dongboge
          remote_host: ${{ secrets.HOST }}
          remote_user: ${{ secrets.USERNAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
          remote_key_pass: ${{ secrets.SSH_PASSPHRASE }}

      - name: 部署服务端文件到服务器
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: dist/server/
          remote_path: /var/www/dongboge/server
          remote_host: ${{ secrets.HOST }}
          remote_user: ${{ secrets.USERNAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
          remote_key_pass: ${{ secrets.SSH_PASSPHRASE }}

      - name: 更新Nginx配置
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avz
          path: deploy/nginx-server-mode.conf
          remote_path: /etc/nginx/sites-available/dongboge.conf
          remote_host: ${{ secrets.HOST }}
          remote_user: ${{ secrets.USERNAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
          remote_key_pass: ${{ secrets.SSH_PASSPHRASE }}

      - name: 启动Node.js服务器和重启Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.PORT || '22' }}
          script: |
            echo "🔄 设置环境变量..."
            cd /var/www/dongboge

            # 创建环境变量文件
            cat > .env << EOF
            PUBLIC_SUPABASE_URL=${{ secrets.PUBLIC_SUPABASE_URL }}
            PUBLIC_SUPABASE_ANON_KEY=${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
            PUBLIC_CDN_URL=https://cdn.dongboge.cn
            SITE_URL=https://dongboge.cn
            NODE_ENV=production
            HOST=127.0.0.1
            PORT=3000
            EOF

            echo "🚀 启动Node.js服务器..."
            # 停止旧的进程
            pkill -f "node.*server/entry.mjs" || echo "没有运行的服务器进程"

            # 启动新的服务器进程
            nohup node server/entry.mjs > server.log 2>&1 &

            # 等待服务器启动
            sleep 3

            echo "🔄 重载Nginx..."
            sudo systemctl reload nginx

            echo "✅ 部署完成！"
            echo "服务器进程状态:"
            ps aux | grep "node.*server/entry.mjs" | grep -v grep || echo "服务器进程未找到"
