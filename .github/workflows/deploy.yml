name: 部署到腾讯云服务器和CDN

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 安装依赖
      run: npm ci
      
    # 不需要单独安装腾讯云COS工具，我们将使用Node.js SDK
        
    - name: 构建项目
      run: npm run build
      
    - name: 调试SSH连接信息
      run: |
        echo "正在调试SSH连接..."
        echo "HOST: ${{ secrets.HOST }} 已设置: ${{ secrets.HOST != '' }}"
        echo "USERNAME: ${{ secrets.USERNAME }} 已设置: ${{ secrets.USERNAME != '' }}"
        echo "SSH_PRIVATE_KEY 已设置: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
        echo "PORT 已设置: ${{ secrets.PORT != '' }}"
        
    - name: 上传静态资源到腾讯云COS
      run: |
        echo "上传静态资源到腾讯云COS..."
        # 安装腾讯云COS SDK
        npm install cos-nodejs-sdk-v5
        
        # 设置环境变量
        export TENCENT_SECRET_ID=${{ secrets.TENCENT_SECRET_ID }}
        export TENCENT_SECRET_KEY=${{ secrets.TENCENT_SECRET_KEY }}
        export TENCENT_COS_BUCKET=${{ secrets.TENCENT_COS_BUCKET }}
        export TENCENT_COS_REGION=ap-guangzhou
        
        # 运行上传脚本（使用--experimental-modules标志支持ES模块）
        node --experimental-modules scripts/upload-to-cos.js
        
        # 安装腾讯云CLI（仅用于CDN刷新）
        pip install tccli
        tccli configure set secretId ${{ secrets.TENCENT_SECRET_ID }}
        tccli configure set secretKey ${{ secrets.TENCENT_SECRET_KEY }}
        tccli configure set region ap-guangzhou
        
        # 刷新CDN缓存
        echo "刷新CDN缓存..."
        tccli cdn PurgePathCache --cli-unfold-argument --Paths https://${{ secrets.CDN_DOMAIN }}/assets/ https://${{ secrets.CDN_DOMAIN }}/fonts/ --FlushType flush
        
    - name: 部署HTML和其他文件到服务器
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete
        path: dist/
        remote_path: /var/www/dongboge
        remote_host: ${{ secrets.HOST }}
        remote_user: ${{ secrets.USERNAME }}
        remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
        remote_key_pass: ${{ secrets.SSH_PASSPHRASE }}
        
    - name: 重启Nginx
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        port: ${{ secrets.PORT || '22' }}
        script: |
          echo "🔄 重载Nginx..."
          sudo systemctl reload nginx
          echo "✅ 部署完成！"
