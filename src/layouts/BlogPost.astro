---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";
import BlogNavigation from "../components/BlogNavigation.astro";
import OptimizedImage from "../components/OptimizedImage.astro";

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  heroImage?: any;
  prevPost?: CollectionEntry<"blog">;
  nextPost?: CollectionEntry<"blog">;
}

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  prevPost,
  nextPost,
} = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      /* CSS 变量定义 */
      :root {
        /* 固定背景色 */
        --bg-light: #ffffff;
        --bg-dark: #101827;
        --bg-logo: #1f1a12;

        /* 文字颜色 */
        --text-on-light: #1f2937;
        --text-on-dark: #f9fafb;
        --text-secondary: #6b7280;

        /* 交互与品牌色 */
        --action-blue: #0b69a3;
        --action-gold: #fbbf24;

        /* 状态反馈 */
        --alert-success: #16a34a;
        --alert-error: #dc2626;

        /* 其他 */
        --border-color-light: #e5e7eb;
        --border-color-dark: #374151;
        --transition-speed: 0.3s;
      }

      body {
        background-color: var(--bg-light);
        color: var(--text-on-light);
        line-height: 1.7;
      }

      /* 文章标题区域 - 暗区背景 */
      .article-header {
        background-color: var(--bg-dark);
        color: var(--text-on-dark);
        padding: 6rem 0 4rem;
        margin-top: 4rem;
        text-align: center;
      }

      .article-header h1 {
        font-size: 2.5rem;
        font-weight: 700;
        line-height: 1.2;
        margin-bottom: 1.5rem;
        color: var(--text-on-dark);
        max-width: 800px;
        margin-left: auto;
        margin-right: auto;
      }

      .article-meta {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 1rem;
        font-size: 0.875rem;
        color: var(--text-secondary);
      }

      .article-meta svg {
        width: 1rem;
        height: 1rem;
      }

      .last-updated-on {
        font-style: italic;
        margin-top: 0.5rem;
      }

      /* 主内容区域 */
      main {
        width: 100%;
        max-width: 100%;
        margin: 0;
      }

      /* 英雄图片区域 */
      .hero-image {
        width: 100%;
        padding: 3rem 2rem;
        background-color: var(--bg-light);
      }

      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        max-height: 60vh;
        max-width: 1000px;
        width: 100%;
        object-fit: cover;
      }

      /* 文章内容区域 */
      .prose {
        max-width: 800px;
        margin: 0 auto;
        padding: 3rem 2rem;
        background-color: var(--bg-light);
      }

      /* 文章内容样式 */
      .prose h1,
      .prose h2,
      .prose h3,
      .prose h4,
      .prose h5,
      .prose h6 {
        color: var(--text-on-light);
        font-weight: 600;
        line-height: 1.3;
        margin-top: 2rem;
        margin-bottom: 1rem;
      }

      .prose h2 {
        font-size: 1.875rem;
        border-bottom: 2px solid var(--border-color-light);
        padding-bottom: 0.5rem;
      }

      .prose h3 {
        font-size: 1.5rem;
      }

      .prose p {
        margin-bottom: 1.5rem;
        color: var(--text-on-light);
      }

      .prose a {
        color: var(--action-blue);
        text-decoration: none;
        border-bottom: 1px solid transparent;
        transition: all var(--transition-speed) ease;
      }

      .prose a:hover {
        border-bottom-color: var(--action-blue);
      }

      .prose ul,
      .prose ol {
        margin-bottom: 1.5rem;
        padding-left: 1.5rem;
      }

      .prose li {
        margin-bottom: 0.5rem;
        color: var(--text-on-light);
      }

      .prose blockquote {
        border-left: 4px solid var(--action-blue);
        padding-left: 1.5rem;
        margin: 2rem 0;
        font-style: italic;
        color: var(--text-secondary);
        background-color: rgba(11, 105, 163, 0.05);
        padding: 1.5rem;
        border-radius: 0 8px 8px 0;
      }

      .prose code {
        background-color: rgba(11, 105, 163, 0.1);
        color: var(--action-blue);
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.875rem;
      }

      .prose pre {
        background-color: var(--bg-dark);
        color: var(--text-on-dark);
        padding: 1.5rem;
        border-radius: 8px;
        overflow-x: auto;
        margin: 1.5rem 0;
      }

      .prose pre code {
        background: none;
        color: inherit;
        padding: 0;
      }

      .prose img {
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin: 2rem 0;
      }

      .prose hr {
        border: none;
        height: 1px;
        background-color: var(--border-color-light);
        margin: 3rem 0;
      }

      /* 响应式设计 */
      @media (max-width: 768px) {
        .article-header {
          padding: 4rem 0 3rem;
        }

        .article-header h1 {
          font-size: 1.875rem;
          padding: 0 1rem;
        }

        .hero-image {
          padding: 2rem 1rem;
        }

        .prose {
          padding: 2rem 1rem;
        }

        .prose h2 {
          font-size: 1.5rem;
        }

        .prose h3 {
          font-size: 1.25rem;
        }
      }
    </style>
  </head>

  <body>
    <!-- Header - 亮区背景 -->
    <div
      class="fixed top-0 left-0 right-0 z-50 bg-white/95 backdrop-blur-md border-b border-gray-200 shadow-sm"
    >
      <Header />
    </div>

    <main>
      <article>
        <!-- 文章标题区域 - 暗区背景 -->
        <header class="article-header">
          <div class="max-w-4xl mx-auto px-4">
            <h1>{title}</h1>
            <div class="article-meta">
              <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                ></path>
              </svg>
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    最后更新于 <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
          </div>
        </header>

        <!-- 英雄图片区域 - 亮区背景 -->
        {
          heroImage && (
            <div class="hero-image">
              <OptimizedImage
                width={1000}
                height={500}
                src={heroImage}
                alt={title}
              />
            </div>
          )
        }

        <!-- 文章内容区域 - 亮区背景 -->
        <div class="prose">
          <slot />
          <BlogNavigation prevPost={prevPost} nextPost={nextPost} />
        </div>
      </article>
    </main>

    <!-- Footer - 暗区背景 -->
    <Footer />
  </body>
</html>
